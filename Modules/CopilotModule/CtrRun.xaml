<UserControl x:Class="Eng.EFsExtensions.Modules.CopilotModule.CtrRun"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Eng.EFsExtensions.Modules.CopilotModule"
             xmlns:converters="clr-namespace:Eng.EFsExtensions.Modules.CopilotModule.Converters"
             xmlns:gcvt="clr-namespace:ESystem.WPF.Converters;assembly=ESystem.WPF"
             xmlns:gWpf="clr-namespace:Eng.EFsExtensions.EFsExtensionsModuleBase.ModuleUtils.WPF;assembly=EFsExtensionsModuleBase"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
  <UserControl.Resources>
    <converters:Int2VisibilityConverter x:Key="Int2VisibilityConverter" />
    <gcvt:BoolToSolidBrushConverter x:Key="BoolToSolidBrushConverter" />
    <gcvt:DoubleNanConverter x:Key="DoubleNanConverter"/>
    <DataTemplate x:Key="TemplateUserVariable">
      <Label>
        <StackPanel Orientation="Horizontal" ToolTip="{Binding Description}">
          <TextBlock Text="{Binding Name}" />
          <TextBlock Text=" = " />
          <TextBox TextAlignment="Right" Margin="0" Text="{Binding UserOrDefaultValue}" Width="50" />
        </StackPanel>
      </Label>
    </DataTemplate>
    <DataTemplate x:Key="TemplateRandomVariable">
      <Label>
        <StackPanel Orientation="Horizontal" ToolTip="{Binding Description}">
          <TextBlock Text="{Binding Name}" />
          <TextBlock Text=" = " />
          <TextBlock Text="{Binding Value}" />
        </StackPanel>
      </Label>
    </DataTemplate>
  </UserControl.Resources>
  <DockPanel DataContext="{Binding}">
    <TabControl>
      <TabItem Header="Speeches">
        <ListView ItemsSource="{Binding SpeechDefinitionVMs}"
                    ItemContainerStyle="{StaticResource ListViewAlternatingStyle}" AlternationCount="2">
          <ListView.Template>
            <ControlTemplate>
              <ScrollViewer>
                <ItemsPresenter></ItemsPresenter>
              </ScrollViewer>
            </ControlTemplate>
          </ListView.Template>
          <ListView.ItemTemplate>
            <DataTemplate>
              <StackPanel x:Name="pnlSpeech" >
                <Label Content="{Binding SpeechDefinition.Title}" />
                <StackPanel Margin="8 0 0 0">
                  <StackPanel Orientation="Horizontal">
                    <TextBlock FontSize="10" FontWeight="Bold" Text="Trigger: " />
                    <TextBlock FontSize="10" Text="{Binding SpeechDefinition.Trigger.DisplayString}" />
                  </StackPanel>
                  <StackPanel Orientation="Horizontal">
                    <TextBlock FontSize="10" FontWeight="Bold" Text="Reset-trigger: " />
                    <TextBlock FontSize="10" Text="{Binding SpeechDefinition.ReactivationTrigger.DisplayString}" />
                  </StackPanel>
                  <StackPanel Orientation="Horizontal">
                    <TextBlock FontSize="10" FontWeight="Bold" Text="Is-active: " />
                    <TextBlock FontSize="10" Text="{Binding RunTime.IsReadyToBeSpoken}" />
                  </StackPanel>
                </StackPanel>
              </StackPanel>
            </DataTemplate>
          </ListView.ItemTemplate>
        </ListView>
      </TabItem>
      <TabItem Header="Variables">
        <ListView ItemsSource="{Binding SpeechDefinitionVMs}"
                    ItemContainerStyle="{StaticResource ListViewAlternatingStyle}" AlternationCount="2">
          <ListView.Template>
            <ControlTemplate>
              <ScrollViewer>
                <ItemsPresenter></ItemsPresenter>
              </ScrollViewer>
            </ControlTemplate>
          </ListView.Template>
          <ListView.ItemTemplate>
            <DataTemplate>
              <StackPanel Visibility="{Binding Variables.Count, Converter={StaticResource Int2VisibilityConverter}}"
                          Orientation="Horizontal">
                <Label Content="{Binding SpeechDefinition.Title}" Width="350" />
                <ItemsControl ItemsSource="{Binding Variables}">
                  <ItemsControl.ItemTemplate>
                    <DataTemplate>
                      <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding Variable.Name}" />
                        <TextBlock Text=" = " />
                        <TextBox Text="{Binding Value, Converter={StaticResource DoubleNanConverter}}" Width="50" TextAlignment="Right"
               IsReadOnly="{Binding IsReadOnly}" Background="{Binding IsValid, Converter={StaticResource BoolToSolidBrushConverter}}" />
                        <TextBlock Text=" " />
                        <TextBlock Text="{Binding AdditionalInfo}" />
                      </StackPanel>
                    </DataTemplate>
                  </ItemsControl.ItemTemplate>
                </ItemsControl>
              </StackPanel>
            </DataTemplate>
          </ListView.ItemTemplate>
        </ListView>
      </TabItem>
      <TabItem Header="Property Values">
        <gWpf:PropertiesDataGrid Properties="{Binding PropertyVMs}" />
      </TabItem>
      <TabItem Header="Evaluation Info">
        <DockPanel>
          <DockPanel DockPanel.Dock="Top">
            <Label DockPanel.Dock="Left" Content="Speech: " />
            <ComboBox ItemsSource="{Binding SpeechDefinitionVMs}" DisplayMemberPath="SpeechDefinition.Title" SelectedValue="{Binding EvaluatorRecentResultSpeechDefinitionVM}" />
          </DockPanel>
          <StackPanel>
            <Label Margin="8 0 0 0">
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="Is ready to be spoken: " />
                <TextBlock Text="{Binding EvaluatorRecentResultSpeechDefinitionVM.RunTime.IsReadyToBeSpoken}" />
              </StackPanel>
            </Label>
            <Label Margin="8 0 0 0">
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="Trigger: " />
                <TextBlock Text="{Binding EvaluatorRecentResultSpeechDefinitionVM.SpeechDefinition.Trigger.DisplayString}" />
              </StackPanel>
            </Label>
            <Label Margin="8 0 0 0">
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="Reactivation-Trigger: " />
                <TextBlock Text="{Binding EvaluatorRecentResultSpeechDefinitionVM.SpeechDefinition.ReactivationTrigger.DisplayString}" />
              </StackPanel>
            </Label>
            <Label Margin="8 0 0 0">
              <StackPanel Orientation="Horizontal">
                <TextBlock Text="Last update time:" />
                <TextBlock Text="{Binding EvaluatorRecentResultSpeechDefinitionVM.RunTime.EvaluatorRecentResultDateTime}" />
              </StackPanel>
            </Label>
            <DataGrid ItemsSource="{Binding EvaluatorRecentResultSpeechDefinitionVM.RunTime.EvaluatorRecentResult}" AutoGenerateColumns="False" >
              <DataGrid.Columns>
                <DataGridTemplateColumn Header="Condition">
                  <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
                      <TextBlock MaxWidth="250" TextWrapping="Wrap" FontSize="12" Text="{Binding StateCheckItem.DisplayString}" />
                    </DataTemplate>
                  </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridCheckBoxColumn Header="True?" Binding="{Binding Result}" />
                <DataGridTextColumn Header="Note" Binding="{Binding Note}" />
              </DataGrid.Columns>
            </DataGrid>
          </StackPanel>
        </DockPanel>
      </TabItem>
    </TabControl>
  </DockPanel>
</UserControl>
